package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class UserSharingRules extends com.sforce.soap.metadata.SharingRules {

    /**
     * Constructor
     */
    public UserSharingRules() {}

    /**
     * element : criteriaBasedRules of type {http://soap.sforce.com/2006/04/metadata}UserCriteriaBasedSharingRule
     * java type: com.sforce.soap.metadata.UserCriteriaBasedSharingRule[]
     */
    private static final com.sforce.ws.bind.TypeInfo criteriaBasedRules__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","criteriaBasedRules","http://soap.sforce.com/2006/04/metadata","UserCriteriaBasedSharingRule",0,-1,true);

    private boolean criteriaBasedRules__is_set = false;

    private com.sforce.soap.metadata.UserCriteriaBasedSharingRule[] criteriaBasedRules = new com.sforce.soap.metadata.UserCriteriaBasedSharingRule[0];

    public com.sforce.soap.metadata.UserCriteriaBasedSharingRule[] getCriteriaBasedRules() {
      return criteriaBasedRules;
    }

    public void setCriteriaBasedRules(com.sforce.soap.metadata.UserCriteriaBasedSharingRule[] criteriaBasedRules) {
      this.criteriaBasedRules = criteriaBasedRules;
      criteriaBasedRules__is_set = true;
    }

    /**
     * element : membershipRules of type {http://soap.sforce.com/2006/04/metadata}UserMembershipSharingRule
     * java type: com.sforce.soap.metadata.UserMembershipSharingRule[]
     */
    private static final com.sforce.ws.bind.TypeInfo membershipRules__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","membershipRules","http://soap.sforce.com/2006/04/metadata","UserMembershipSharingRule",0,-1,true);

    private boolean membershipRules__is_set = false;

    private com.sforce.soap.metadata.UserMembershipSharingRule[] membershipRules = new com.sforce.soap.metadata.UserMembershipSharingRule[0];

    public com.sforce.soap.metadata.UserMembershipSharingRule[] getMembershipRules() {
      return membershipRules;
    }

    public void setMembershipRules(com.sforce.soap.metadata.UserMembershipSharingRule[] membershipRules) {
      this.membershipRules = membershipRules;
      membershipRules__is_set = true;
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "UserSharingRules");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeObject(__out, criteriaBasedRules__typeInfo, criteriaBasedRules, criteriaBasedRules__is_set);
       __typeMapper.writeObject(__out, membershipRules__typeInfo, membershipRules, membershipRules__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        __in.peekTag();
        if (__typeMapper.isElement(__in, criteriaBasedRules__typeInfo)) {
            setCriteriaBasedRules((com.sforce.soap.metadata.UserCriteriaBasedSharingRule[])__typeMapper.readObject(__in, criteriaBasedRules__typeInfo, com.sforce.soap.metadata.UserCriteriaBasedSharingRule[].class));
        }
        __in.peekTag();
        if (__typeMapper.isElement(__in, membershipRules__typeInfo)) {
            setMembershipRules((com.sforce.soap.metadata.UserMembershipSharingRule[])__typeMapper.readObject(__in, membershipRules__typeInfo, com.sforce.soap.metadata.UserMembershipSharingRule[].class));
        }
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[UserSharingRules ");
      sb.append(super.toString());sb.append(" criteriaBasedRules='").append(com.sforce.ws.util.Verbose.toString(criteriaBasedRules)).append("'\n");
      sb.append(" membershipRules='").append(com.sforce.ws.util.Verbose.toString(membershipRules)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
